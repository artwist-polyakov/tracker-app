//
//  Mappers.swift
//  Tracker
//
//  Created by –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ü–æ–ª—è–∫–æ–≤ on 03.08.2023.
//

struct Mappers {
    
    static func intToDaysGoneMapper (_ number: Int) -> String {
        var result  = "\(number)"
        if (result.hasSuffix("12") || result.hasSuffix("11")) {
            result += " –¥–Ω–µ–π"
        } else if result.hasSuffix("1") {
            result += " –¥–µ–Ω—å"
        } else if result.hasSuffix("2") || result.hasSuffix("3") || result.hasSuffix("4") {
            result += " –¥–Ω—è"
        } else {
            result += " –¥–Ω–µ–π"
        }
        return result
    }
    
    static func intToIconMapper(_ number:Int) -> String {
        let icons = ["üôÇ","üòª","üå∫","üê∂","‚ù§Ô∏è","üò±","üòá","üò°","ü•∂",
                     "ü§î","üôå","üçî","ü•¶","üèì","ü•á","üé∏","üèù","üò™"]
        return icons[number % QUANTITY.COLLECTIONS_CELLS.rawValue]
    }
    
    static func iconToIntMapper(_ icon:String) -> Int {
        let icons = ["üôÇ":0,
                     "üòª":1,
                     "üå∫":2,
                     "üê∂":3,
                     "‚ù§Ô∏è":4,
                     "üò±":5,
                     "üòá":6,
                     "üò°":7,
                     "ü•∂":8,
                     "ü§î":9,
                     "üôå":10,
                     "üçî":11,
                     "ü•¶":12,
                     "üèì":13,
                     "ü•á":14,
                     "üé∏":15,
                     "üèù":16,
                     "üò™":17]
        return icons[icon] ?? 0
    }
    
    static func giveMeAllWeekdaysNames() -> [String:[Int]] {
        
        // –æ—Ç–¥–∞—Å—Ç –º–∞—Å—Å–∏–≤: –∏–º—è –¥–Ω—è –Ω–µ–¥–µ–ª–∏, –Ω–æ–º–µ—Ä –¥–Ω—è –Ω–µ–¥–µ–ª–∏ –≤ –º–∏—Ä–µ —Å
        // –≤–æ—Å–∫—Ä –¥–µ–Ω—å 1, –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏ –≤ –º–∏—Ä–µ –≥–¥–µ –ø–µ—Ä–≤—ã–π –¥–µ–Ω—å
        // –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –ª–æ–∫–∞–ª–∏
        
        let shift = 1 // MARK: - —Ç—É—Ç –±—É–¥–µ—Ç Int(NSLocalizedString()) 0 –¥–ª—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ
        return ["–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫":[2,((2+7)-shift)%8],
                "–≤—Ç–æ—Ä–Ω–∏–∫":[3,((3+7)-shift)%8],
                "—Å—Ä–µ–¥–∞":[4,((4+7)-shift)%8],
                "—á–µ—Ç–≤–µ—Ä–≥":[5,((5+7)-shift)%8],
                "–ø—è—Ç–Ω–∏—Ü–∞":[6,((6+7)-shift)%8],
                "—Å—É–±–±–æ—Ç–∞":[7,((7+7)-shift)%8],
                "–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ":[1,((1+7)-shift)%8]]
    }
    
    static func sortedStringOfSetWeekdays(_ weekdays: Set<String>) -> String {
        if weekdays.count == 7 {
            return "–ö–∞–∂–¥—ã–π –¥–µ–Ω—å"
        }
        let short_names = ["–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫":"–ü–Ω",
                           "–≤—Ç–æ—Ä–Ω–∏–∫":"–í—Ç",
                           "—Å—Ä–µ–¥–∞":"–°—Ä",
                           "—á–µ—Ç–≤–µ—Ä–≥":"–ß—Ç",
                           "–ø—è—Ç–Ω–∏—Ü–∞":"–ü—Ç",
                           "—Å—É–±–±–æ—Ç–∞":"–°–±",
                           "–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ":"–í—Å"]
        
        let sortedWeekdays = weekdays.sorted {
            return giveMeAllWeekdaysNames()[$0.lowercased()]![1] < giveMeAllWeekdaysNames()[$1.lowercased()]![1]
        }
        
        let sortedShortNames = sortedWeekdays.map { short_names[$0.lowercased()]! }
        
        return sortedShortNames.joined(separator: ", ")
        
    }
    
    
}
