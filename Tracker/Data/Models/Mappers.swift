//
//  Mappers.swift
//  Tracker
//
//  Created by –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ü–æ–ª—è–∫–æ–≤ on 03.08.2023.
//

struct Mappers {
    
    static func intToDaysGoneMapper (_ number: Int) -> String {
        var result  = "\(number)"
        if (result.hasSuffix("12") || result.hasSuffix("11")) {
            result += " –¥–Ω–µ–π"
        } else if result.hasSuffix("1") {
            result += " –¥–µ–Ω—å"
        } else if result.hasSuffix("2") || result.hasSuffix("3") || result.hasSuffix("4") {
            result += " –¥–Ω—è"
        } else {
            result += " –¥–Ω–µ–π"
        }
            return result
    }
    
    static func intToIconMapper(_ number:Int) -> String {
        let icons = ["üôÇ","üòª","üå∫","üê∂","‚ù§Ô∏è","üò±","üòá","üò°","ü•∂",
                 "ü§î","üôå","üçî","ü•¶","üèì","ü•á","üé∏","üèù","üò™"]
        return icons[number % 18]
    }
    
    static func giveMeAllWeekdaysNames() -> [String:Int] {
        return ["–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫":1,
                "–≤—Ç–æ—Ä–Ω–∏–∫":2,
                "—Å—Ä–µ–¥–∞":3,
                "—á–µ—Ç–≤–µ—Ä–≥":4,
                "–ø—è—Ç–Ω–∏—Ü–∞":5,
                "—Å—É–±–±–æ—Ç–∞":6,
                "–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ":7]
    }
    
    static func sortedStringOfSetWeekdays(_ weekdays: Set<String>) -> String {
        
        let short_names = ["–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫":"–ü–Ω",
                       "–≤—Ç–æ—Ä–Ω–∏–∫":"–í—Ç",
                       "—Å—Ä–µ–¥–∞":"–°—Ä",
                       "—á–µ—Ç–≤–µ—Ä–≥":"–ß—Ç",
                       "–ø—è—Ç–Ω–∏—Ü–∞":"–ü—Ç",
                       "—Å—É–±–±–æ—Ç–∞":"–°–±",
                       "–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ":"–í—Å"]
        
        let sortedWeekdays = weekdays.sorted {
                giveMeAllWeekdaysNames()[$0]! < giveMeAllWeekdaysNames()[$1]!
            }
            
        let sortedShortNames = sortedWeekdays.map { short_names[$0]! }
        
        return sortedShortNames.joined(separator: ", ")

    }
}
